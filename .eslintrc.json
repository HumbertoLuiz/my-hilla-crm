{
  "extends": ["vaadin"],
  "plugins": ["chai-friendly"],
  "ignorePatterns": ["packages/ts/*/*.js", "packages/ts/*/*.d.ts", "packages/ts/*/test/**/*.snap.ts"],
  "rules": {
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // https://github.com/import-js/eslint-plugin-import/issues/2170#issuecomment-889657579
    "import/no-unresolved": "off",
    "max-classes-per-file": "off",
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "lines-between-class-members": "off",
    "no-unused-expressions": "off",
    "chai-friendly/no-unused-expressions": "error",
    "lit/quoted-expressions": "off" // Needs to be off for element expressions, but would be nice to have on for other kind of expressions
  }
}
